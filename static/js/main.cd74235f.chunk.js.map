{"version":3,"sources":["components/video_list/video_list.module.css","components/search_header/search_header.module.css","components/video_item/video_item.module.css","app.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js","youtube_data/youtube.js"],"names":["module","exports","VideoItem","video","onVideoClick","displayType","display","styles","list","grid","className","container","onClick","thumbnail","src","snippet","thumbnails","medium","url","alt","metadata","title","channel","channelTitle","VideoList","videos","map","id","SearchHeader","search","inputRef","useRef","handleSubmit","value","current","header","logo","img","inputSet","ref","input","type","onKeyPress","event","key","button","buttonImg","buttonSet","setImg","VideoDetail","width","height","frameBorder","allowFullScreen","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","mostPopular","then","app","query","content","detail","this","axios","create","baseURL","params","a","get","part","chart","maxResults","regionCode","response","data","items","q","item","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd74235f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__1VCw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__3zkT2\",\"logo\":\"search_header_logo__tK0eh\",\"img\":\"search_header_img__3WZdH\",\"title\":\"search_header_title__2RdR8\",\"input\":\"search_header_input__3vem-\",\"inputSet\":\"search_header_inputSet__f_Jxw\",\"button\":\"search_header_button__19_1L\",\"buttonImg\":\"search_header_buttonImg__3Mukl\",\"buttonSet\":\"search_header_buttonSet__1AdWs\",\"setImg\":\"search_header_setImg__3qwYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__15oji\",\"list\":\"video_item_list__2jYRY\",\"grid\":\"video_item_grid__2iJDD\",\"video\":\"video_item_video__37dg9\",\"thumbnail\":\"video_item_thumbnail__1w2AL\",\"metadata\":\"video_item_metadata__N-I6a\",\"title\":\"video_item_title__3lIaP\",\"channel\":\"video_item_channel__1dZ3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"app_content__ckDFI\",\"detail\":\"app_detail__Xmsnl\",\"list\":\"app_list__2we4s\"};","import React from 'react';\nimport styles from '../video_item/video_item.module.css';\n\nconst VideoItem = ({ video, onVideoClick, display }) => {\n    const displayType = display === 'list' ? styles.list : styles.grid;\n    return (\n        <li\n            className={`${styles.container} ${displayType}`}\n            onClick={() => onVideoClick(video)}\n        >\n            <div className={styles.video}>\n                <img\n                    className={styles.thumbnail}\n                    src={video.snippet.thumbnails.medium.url}\n                    alt=\"video_thumbnails\"\n                />\n\n                <div className={styles.metadata}>\n                    <p className={styles.title}>{video.snippet.title}</p>\n                    <p className={styles.channel}>\n                        {video.snippet.channelTitle}\n                    </p>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport VideoItem from '../video_item/video_item';\nimport styles from './video_list.module.css';\n\nconst VideoList = ({ videos, onVideoClick, display }) => {\n    return (\n        <ul className={styles.videos}>\n            {videos.map((video) => (\n                <VideoItem\n                    key={video.id}\n                    video={video}\n                    onVideoClick={onVideoClick}\n                    display={display}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default VideoList;\n","import React, { useRef } from 'react';\nimport styles from '../search_header/search_header.module.css';\n\nconst SearchHeader = ({ search }) => {\n    const inputRef = useRef();\n\n    const handleSubmit = () => {\n        const value = inputRef.current.value;\n        search(value);\n        inputRef.current.value = '';\n    };\n\n    const onClick = () => {\n        handleSubmit();\n    };\n\n    const onKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSubmit();\n        }\n    };\n\n    return (\n        <header className={styles.header}>\n            <div className={styles.logo}>\n                <img\n                    className={styles.img}\n                    src=\"/images/logo.png\"\n                    alt=\"search-logo\"\n                />\n                <h1 className={styles.title}>YouTube</h1>\n            </div>\n\n            <div className={styles.inputSet}>\n                <input\n                    ref={inputRef}\n                    className={styles.input}\n                    type=\"search\"\n                    onKeyPress={onKeyPress}\n                />\n                <button\n                    className={styles.button}\n                    type=\"submit\"\n                    onClick={onClick}\n                >\n                    <img\n                        className={styles.buttonImg}\n                        src=\"/images/search.png\"\n                        alt=\"search-button\"\n                    />\n                </button>\n            </div>\n\n            <div className={styles.buttonSet}>\n                <i className={`fas fa-video ${styles.setImg}`}></i>\n                <i className={`fas fa-bell ${styles.setImg}`}></i>\n            </div>\n        </header>\n    );\n};\n\nexport default SearchHeader;\n","import React from 'react';\n\nconst VideoDetail = ({ video }) => {\n    return (\n        <>\n            <iframe\n                title=\"youtube video\"\n                id=\"ytplayer\"\n                type=\"text/html\"\n                width=\"100%\"\n                height=\"500px\"\n                src={`https://www.youtube.com/embed/${video.id}`}\n                frameBorder=\"0\"\n                allowFullScreen\n            ></iframe>\n            <h1>{video.snippet.title}</h1>\n            <h3>{video.snippet.channelTitle}</h3>\n            <p>{video.snippet.description}</p>\n        </>\n    );\n};\n\nexport default VideoDetail;\n","import React, { useEffect, useState } from 'react';\nimport styles from './app.module.css';\nimport VideoList from './components/video_list/video_list';\nimport SearchHeader from './components/search_header/search_header';\nimport VideoDetail from './components/video_detail/video_detail';\n\nfunction App({ youtube }) {\n    const [videos, setVideos] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n\n    const selectVideo = (video) => {\n        setSelectedVideo(video);\n    };\n    const search = (query) => {\n        youtube\n            .search(query) //\n            .then((videos) => {\n                setVideos(videos);\n                setSelectedVideo(null);\n            });\n    };\n\n    useEffect(() => {\n        youtube\n            .mostPopular() //\n            .then((videos) => setVideos(videos));\n    }, [youtube]);\n\n    return (\n        <div className={styles.app}>\n            <SearchHeader search={search} />\n            <div className={styles.content}>\n                {selectedVideo && (\n                    <div className={styles.detail}>\n                        <VideoDetail video={selectedVideo} />\n                    </div>\n                )}\n                <div className={styles.list}>\n                    <VideoList\n                        videos={videos}\n                        onVideoClick={selectVideo}\n                        display={selectedVideo ? 'list' : 'grid'}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport App from './app';\nimport Youtube from './youtube_data/youtube';\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\nReactDOM.render(\n    <React.StrictMode>\n        <App youtube={youtube} />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","import axios from 'axios';\n\nclass Youtube {\n    constructor(key) {\n        this.youtube = axios.create({\n            baseURL: 'https://www.googleapis.com/youtube/v3',\n            params: { key: key },\n        });\n    }\n\n    async mostPopular() {\n        const response = await this.youtube.get('videos', {\n            params: {\n                part: 'snippet',\n                chart: 'mostPopular',\n                maxResults: 24,\n                regionCode: 'KR',\n            },\n        });\n        return response.data.items;\n    }\n\n    async search(query) {\n        const response = await this.youtube.get('search', {\n            params: {\n                part: 'snippet',\n                maxResults: 24,\n                type: 'video',\n                regionCode: 'KR',\n                q: query,\n            },\n        });\n        return response.data.items.map((item) => ({\n            ...item,\n            id: item.id.videoId,\n        }));\n    }\n}\n\nexport default Youtube;\n"],"sourceRoot":""}